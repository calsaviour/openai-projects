/* eslint-disable @next/next/no-img-element */
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import React, { useState } from "react";
import { FormGroup } from "~/components/FormGroup";
import { Input } from "~/components/input";
import { api } from "~/utils/api";
import { Button } from "~/components/Button";

const colors = [
  "blue",
  "red",
  "pink",
  "green",
  "orange",
  "yellow",
  "white",
  "black",
]

const GeneratePage: NextPage = () => {

  const [form, setForm] = useState({
    prompt: "",
    color: "",
    numberOfIcons: '1'
  });

  const [imagesUrl, setImagesUrl] = useState<{ imageUrl: string }[]>([]);

  const generateIcon = api.generate.generateIcon.useMutation({
    onSuccess(data) {
      setImagesUrl(data);
    }
  });


  function updateForm(key: string) {
    return function (e: React.ChangeEvent<HTMLInputElement>) {
      setForm((prev) => ({
        ...prev,
        [key]: e.target.value
      }))
    };
  }

  function handleFormSubmit(e: React.FormEvent) {
    e.preventDefault();
    generateIcon.mutate({
      ...form,
      numberOfIcons: parseInt(form.numberOfIcons)
    });
  }

  return (
    <>
      <Head>
        <title>Generate Icons</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mt-24 min-h-screen flex container mx-auto flex-col gap-4 px-8">
        <h1 className="text-6xl">Generate your icons </h1>
        <p className="text-2xl mb-12">Fill out the form below to start generating your icons.</p>
        <form className="flex flex-col gap-4"
          onSubmit={handleFormSubmit}
        >
          <h2 className="text-xl">
            1. Describe what your want your icon to look like
          </h2>
          <FormGroup className="mb-12">
            <label>Prompt</label>
            <Input
              required
              value={form.prompt}
              onChange={updateForm("prompt")}></Input>
          </FormGroup>

          <h2 className="text-xl">
            2. Pick your icon color.
          </h2>
          <FormGroup className="mb-12 grid grid-cols-4">
            {colors.map((color) => (
              <label key={color} className="flex gap-2 text-2xl">
                <input
                  required
                  type="radio"
                  name="color"
                  checked={color == form.color}
                  onChange={() => setForm((prev) => ({ ...prev, color }))}
                ></input>
                {color}
              </label>
            ))}
          </FormGroup>

          <h2 className="text-xl">
            3. How many do you want
          </h2>
          <FormGroup className="mb-12">
            <label>
              Number of Icons
            </label>
            <Input
              required
              inputMode="numeric"
              pattern="[1-9]|10"
              type="number"
              value={form.numberOfIcons}
              onChange={updateForm("numberOfIcons")}
            >
            </Input>
          </FormGroup>

          <Button
            isLoading={generateIcon.isLoading}
            disabled={generateIcon.isLoading}
          >
            Submit
          </Button>
        </form>

        {imagesUrl && (
          <>
            <h2 className="text-xl">Your Icons</h2>
            <section className="grid grid-cols-4 gap-4 mb-12">
              {imagesUrl.map(({ imageUrl }) => (
                <Image
                  key={imageUrl}
                  src={imageUrl}
                  alt="an image of your generated prompt"
                  width={100}
                  height={100}
                  className="w-full"
                />
              ))}
            </section>
          </>
        )}
      </main>
    </>
  );
};

export default GeneratePage;

